"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// https://github.com/UwUCode/Utils/blob/3e41d5bab0/src/Other/Timer.ts
class Timer {
    static now() { return process.hrtime.bigint(); }
    static calc(start, end, dec = 0) {
        const v = Number(end - start);
        return this.convert(parseFloat((v).toFixed(dec)), "ns", dec);
    }
    // https://github.com/UwUCode/Utils/blob/3e41d5bab0/src/Functions/Time.ts#L103-L119
    static convert(input, type, dec = 3) {
        input = parseFloat(input.toFixed(dec));
        switch (type) {
            case "ms": return input < 1000 ? `${input}ms` : this.ms(input);
            case "mi": return input < 1000 ? `${input}Âµs` : this.convert(input / 1000, "ms", dec);
            case "ns": return input < 1000 ? `${input}ns` : this.convert(input / 1000, "mi", dec);
            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions
            default: return `${input}${type}`;
        }
    }
    // https://github.com/UwUCode/Utils/blob/10b0159/src/Functions/Time.ts#L11-L86
    static ms(time) {
        if (typeof time !== "bigint")
            time = BigInt(Math.floor(time));
        const r = {
            milliseconds: 0n,
            seconds: 0n,
            minutes: 0n,
            hours: 0n,
            days: 0n,
            months: 0n,
            years: 0n
        };
        if (time < 0n)
            throw new TypeError("Negative time provided.");
        if (time === 0n)
            return "0 seconds";
        // Number.EPSILON = https://stackoverflow.com/a/11832950
        r.milliseconds = time % 1000n;
        r.years = time / 31540000000n;
        time -= r.years * 31540000000n;
        r.months = time / 2628000000n;
        time -= r.months * 2628000000n;
        r.days = time / 86400000n;
        time -= r.days * 86400000n;
        r.hours = time / 3600000n;
        time -= r.hours * 3600000n;
        r.minutes = time / 60000n;
        time -= r.minutes * 60000n;
        r.seconds = time / 1000n;
        time -= r.seconds * 1000n;
        const total = (Object.values(r)).reduce((a, b) => a + b, 0n);
        if (r.milliseconds === total)
            return `${r.milliseconds}ms`;
        const str = [];
        if (r.seconds > 0)
            str.push(`${r.seconds} second${r.seconds === 1n ? "" : "s"}`);
        if (r.minutes > 0)
            str.push(`${r.minutes} minute${r.minutes === 1n ? "" : "s"}`);
        if (r.hours > 0)
            str.push(`${r.hours} hour${r.hours === 1n ? "" : "s"}`);
        if (r.days > 0)
            str.push(`${r.days} day${r.days === 1n ? "" : "s"}`);
        if (r.months > 0)
            str.push(`${r.months} month${r.months === 1n ? "" : "s"}`);
        if (r.years > 0)
            str.push(`${r.years} year${r.years === 1n ? "" : "s"}`);
        if (str.length > 1)
            str[0] = `and ${str[0]}`;
        return str.reverse().join(" ");
    }
}
exports.default = Timer;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGltZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvdXRpbC9UaW1lci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHNFQUFzRTtBQUN0RSxNQUFxQixLQUFLO0lBQ3pCLE1BQU0sQ0FBQyxHQUFHLEtBQUssT0FBTyxPQUFPLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQztJQUVoRCxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQWEsRUFBRSxHQUFXLEVBQUUsR0FBRyxHQUFHLENBQUM7UUFDOUMsTUFBTSxDQUFDLEdBQUcsTUFBTSxDQUFDLEdBQUcsR0FBRyxLQUFLLENBQUMsQ0FBQztRQUM5QixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsSUFBSSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQzlELENBQUM7SUFFRCxtRkFBbUY7SUFDbkYsTUFBTSxDQUFDLE9BQU8sQ0FBQyxLQUFhLEVBQUUsSUFBd0IsRUFBRSxHQUFHLEdBQUcsQ0FBQztRQUM5RCxLQUFLLEdBQUcsVUFBVSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUN2QyxRQUFRLElBQUksRUFBRTtZQUNiLEtBQUssSUFBSSxDQUFDLENBQUMsT0FBTyxLQUFLLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQy9ELEtBQUssSUFBSSxDQUFDLENBQUMsT0FBTyxLQUFLLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssR0FBRyxJQUFJLEVBQUUsSUFBSSxFQUFFLEdBQUcsQ0FBQyxD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